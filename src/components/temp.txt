import React ,{useRef} from 'react'
import { useNavigate } from 'react-router-dom';


function Modal ({handleCloseModal , streak, imp}) {

  const modalRef = useRef(null)

  const handleClick = (e)=>{
    
    if(modalRef.current === e.target){
      handleCloseModal();
    }
  }

  const navigate = useNavigate();


  return ( 
   <div ref={modalRef} onClick={handleClick} className='fixed  flex flex-col items-center justify-center inset-0 bg-opacity-5 backdrop-blur-sm text-white'>
    <div className='bg-black w-1/3 rounded-t-md'>
    <button className='text-white' onClick={handleCloseModal} type='button'>
    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-x"><path d="M18 6 6 18"/><path d="m6 6 12 12"/></svg>
    </button>
    </div>
     <div className='bg-violet-500 flex flex-col border-black border-4 gap-3 items-center w-1/3 h-75% rounded-b-md  px-3 py-3 text-white'>
        <h1 className='font-bold text-2xl text-white '>Do You Really Wanna Break The Streak ?</h1>
        <p className='text-wrap italic'>Remember You Said "{imp}"</p>
        <p className='text-wrap text-xl'>You Have a Ongoing Streak of {streak}...Think About it..</p>
        <button className='bg-black  px-4 py-2 rounded-md' onClick={()=>{navigate("/pomodoro")}}>Complete With Pomodoro Timer </button>
    </div>
   </div>
  )
}

export default Modal


 try {
      setLoading(true);
      setError(null);
      configService
        .getUser()
        .then((data) => {
          if (data) {
            setLoggedIn(true);
            configService.getHabitList().then((res) => {
              if (res) {
                console.log("CLicked Bruh");
                setHabits(res.documents);
              }
            });
          }
        })

        .finally(() => {
          setLoading(false);
        });
    } catch (error) {
      setError(error.message);
      console.log("Appwrite :: getHabits :: Error :: ", error.message);
      setLoading(false);
    }